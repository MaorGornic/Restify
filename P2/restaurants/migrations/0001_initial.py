# Generated by Django 4.0.3 on 2022-03-05 16:40

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_timestamp', models.DateTimeField(auto_created=True)),
                ('title', models.CharField(max_length=200)),
                ('banner', models.ImageField(blank=True, null=True, upload_to='store_avatars/')),
                ('contents', models.CharField(max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='ModifiedUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone_num', models.CharField(max_length=10)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='user_avatar/')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200)),
                ('email', models.CharField(max_length=100)),
                ('phone_num', models.CharField(max_length=10)),
                ('views', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('logo', models.ImageField(blank=True, null=True, upload_to='store_avatars/')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blogs', to='restaurants.blog')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='restaurants.modifieduser')),
                ('followers', models.ManyToManyField(related_name='restaurant_followers', to='restaurants.modifieduser')),
                ('likes', models.ManyToManyField(related_name='restaurant_likes', to='restaurants.modifieduser')),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_owner', to='restaurants.modifieduser')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=200)),
                ('redirection', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification', to='restaurants.modifieduser')),
            ],
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('picture', models.ImageField(blank=True, null=True, upload_to='menu/')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menuitems', to='restaurants.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_created=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant', to='restaurants.modifieduser')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='restaurants.modifieduser')),
            ],
        ),
        migrations.AddField(
            model_name='blog',
            name='likes',
            field=models.ManyToManyField(related_name='blog_likes', to='restaurants.modifieduser'),
        ),
    ]
